name: Node.js CI

on: [push, pull_request, release]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node Modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - name: Install Frozen Dependencies
      run: npm ci
    - run: xvfb-run -a npm test
  
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node Modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - name: Globally Install VSCE
      run: npm install -g vsce
    - name: Install Frozen Dependencies
      run: npm ci
    - run: vsce package
  
  deploy-github-releases:
    runs-on: ubuntu-latest

    env:
      test: "Hello World"

    needs: [build, test]
    if: success() && startsWith(github.ref, 'refs/tags/')

    steps:
      - run: echo "$test"

  deploy-vscode-marketplace:
    runs-on: ubuntu-latest

    needs: [build, test]
    if: success() && startsWith(github.ref, 'refs/tags/')

    steps:
      - run: echo "$test"

# Testing jobs
  echo-env:
    runs-on: ubuntu-latest

    env:
      package-tag: $(node -p "require('./package.json').version")

    steps:
      - run: echo ${{ github.ref }}
      - run: echo "$package-tag"
